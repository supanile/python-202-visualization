''' 2. Memory Efficiency '''

'''
Numpy ใช้หน่วยความจำอย่างมีประสิทธิภาพมากกว่า Python list เนื่องจากข้อมูลใน Numpy array ถูกเก็บเป็นประเภทข้อมูลเดียวกัน (homogeneous) เช่น ตัวเลขทศนิยมทั้งหมด หรือ ตัวเลขจำนวนเต็มทั้งหมด ต่างจาก Python list ที่สามารถเก็บข้อมูลหลากหลายประเภทในรายการเดียวกันได้ (heterogeneous) แต่ต้องแลกมาด้วยการใช้หน่วยความจำที่มากกว่า
'''

import numpy as np
import sys

# ขนาดของ Numpy array
arr = np.array([1, 2, 3, 4, 5])
print("Numpy array memory:", arr.nbytes)

# ขนาดของ Python list
lst = [1, 2, 3, 4, 5]
print("Python list memory:", sys.getsizeof(lst))

'''
ผลลัพธ์: Numpy array จะใช้หน่วยความจำน้อยกว่ามากในการเก็บข้อมูลแบบเดียวกัน

ซึ่งเหตุผลก็เหมือนกับเรื่องของ Performance เลย เนื่องจาก Numpy จัดเก็บข้อมูลในหน่วยความจำแบบต่อเนื่อง ทำให้เวลาเก็บข้อมูล เช่น [1, 2, 3, 4, 5] จะถูกเก็บติดกัน “เป็นบล็อกเดียว” แตกต่างกับ Python List ที่แต่ละตัวเลขในลิสต์จะถูกเก็บแยกกัน โดยมีตัวชี้ (pointers) ที่ชี้ไปยังตำแหน่งของแต่ละค่าข้อมูลในหน่วยความจำ

รวมถึง Numpy array จะเก็บข้อมูลในรูปแบบที่มีประเภทเดียวกันเสมอ (homogeneous data) เช่น ข้อมูลทั้งหมดในอาร์เรย์เป็น int, float, หรือ bool ซึ่งทำให้สามารถจัดสรรพื้นที่หน่วยความจำให้เหมาะสมตามประเภทของข้อมูลนั้นได้

ตัวอย่าง :

Numpy: np.array([1, 2, 3]) ข้อมูลทั้งหมดเป็น int จึงใช้พื้นที่แบบเดียวกัน
Python list: [1, 2.0, 'three'] ข้อมูลมีหลายประเภท (int, float, str) จึงใช้พื้นที่มากกว่าในการจัดการข้อมูลที่แตกต่างกัน
จึงเห็นเหตุผลที่ทำให้ numpy ใช้ Memory ที่น้อยกว่าการใช้ใน Python list ได้
'''